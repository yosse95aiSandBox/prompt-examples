{"id":"953db39d-2b3a-482a-9183-31ffcf599bc1","data":{"nodes":[{"id":"Data-WYWqa","type":"genericNode","position":{"x":139,"y":50.296875},"data":{"type":"Data","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional\nfrom langflow import CustomComponent\nfrom langchain.llms.bedrock import Bedrock\nfrom langchain.llms.base import BaseLLM\n\n\nclass AmazonBedrockComponent(CustomComponent):\n    display_name: str = \"Amazon Bedrock\"\n    description: str = \"LLM model from Amazon Bedrock.\"\n\n    def build_config(self):\n        return {\n            \"model_id\": {\n                \"display_name\": \"Model Id\",\n                \"options\": [\n                    \"ai21.j2-grande-instruct\",\n                    \"ai21.j2-jumbo-instruct\",\n                    \"ai21.j2-mid\",\n                    \"ai21.j2-mid-v1\",\n                    \"ai21.j2-ultra\",\n                    \"ai21.j2-ultra-v1\",\n                    \"anthropic.claude-instant-v1\",\n                    \"anthropic.claude-v1\",\n                    \"anthropic.claude-v2:1\",\n                    \"cohere.command-text-v14\",\n                ],\n            },\n            \"credentials_profile_name\": {\"display_name\": \"Credentials Profile Name\"},\n            \"streaming\": {\"display_name\": \"Streaming\", \"field_type\": \"bool\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model_id: str = \"anthropic.claude-instant-v1\",\n        credentials_profile_name: Optional[str] = \"default\",\n    ) -> BaseLLM:\n        try:\n            output = Bedrock(\n                credentials_profile_name=credentials_profile_name,\n                model_id=model_id,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to AmazonBedrock API.\") from e\n        return output","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"credentials_profile_name":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"default","fileTypes":[],"file_path":"","password":false,"name":"credentials_profile_name","display_name":"Credentials Profile Name","advanced":false,"dynamic":false,"info":"","title_case":true},"model_id":{"type":"str","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"value":"anthropic.claude-instant-v1","fileTypes":[],"file_path":"","password":false,"options":["ai21.j2-grande-instruct","ai21.j2-jumbo-instruct","ai21.j2-mid","ai21.j2-mid-v1","ai21.j2-ultra","ai21.j2-ultra-v1","anthropic.claude-instant-v1","anthropic.claude-v1","anthropic.claude-v2:1","cohere.command-text-v14"],"name":"model_id","display_name":"Model Id","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"CustomComponent"},"description":"LLM model from Amazon Bedrock.","base_classes":["BaseLanguageModel","BaseLLM"],"display_name":"Amazon Bedrock","documentation":"","custom_fields":{"model_id":null,"credentials_profile_name":null},"output_types":["BaseLLM"],"field_formatters":{},"beta":true},"id":"Data-WYWqa","description":"LLM model from Amazon Bedrock.","display_name":"Amazon Bedrock"},"selected":false,"width":384,"height":465,"dragging":false,"positionAbsolute":{"x":139,"y":50.296875}},{"id":"PromptTemplate-poH2r","type":"genericNode","position":{"x":202,"y":538.296875},"data":{"type":"PromptTemplate","node":{"template":{"output_parser":{"type":"BaseOutputParser","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"output_parser","advanced":false,"dynamic":true,"info":"","title_case":true},"input_types":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_types","advanced":false,"dynamic":true,"info":"","title_case":true},"input_variables":{"type":"str","required":true,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_variables","advanced":false,"dynamic":true,"info":"","title_case":true,"value":["input_text"]},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"metadata","advanced":false,"dynamic":true,"info":"","title_case":true},"name":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"name","advanced":false,"dynamic":true,"info":"","title_case":true},"partial_variables":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"partial_variables","advanced":false,"dynamic":true,"info":"","title_case":true},"tags":{"type":"str","required":false,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"tags","advanced":false,"dynamic":true,"info":"","title_case":true},"template":{"type":"prompt","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"fileTypes":[],"password":false,"name":"template","advanced":false,"dynamic":true,"info":"","title_case":true,"value":"あなたは丁寧で礼儀正しくメールを返すプロフェッショナルです。\n以下の <mail></mail> の xml タグで囲まれたメール文面に対して、<intention></intention> の xml タグで囲まれた内容で返信メールを作成してください。\n\n<mail>\n{input_text}\n</mail>\n\n<intention>やだ</intention>\n\nメールを作成する際、以下の<rule></rule>に囲まれたルールを遵守してください。\n<rule>\n* 文面の最初には宛先を様づけで書くこと\n* いきなり本題に入らず挨拶を入れること\n* 相手の幸せを祈ること\n* 文面の最後に自分の名前を敬称なしで入れること\n* 丁寧で礼儀正しいこと\n* 出力は<output></output>タグで囲い、<output>から始めること\n</rule>"},"template_format":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":"f-string","fileTypes":[],"password":false,"name":"template_format","advanced":false,"dynamic":true,"info":"","title_case":true},"validate_template":{"type":"bool","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"validate_template","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"PromptTemplate","input_text":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"input_text","display_name":"input_text","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","title_case":true}},"description":"A prompt template for a language model.","icon":null,"base_classes":["BasePromptTemplate","StringPromptTemplate","PromptTemplate"],"name":"","display_name":"PromptTemplate","documentation":"https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/","custom_fields":{"":["input_text"]},"output_types":[],"full_path":null,"field_formatters":{},"beta":false,"error":null},"id":"PromptTemplate-poH2r","description":"A prompt template for a language model.","display_name":"PromptTemplate"},"selected":true,"width":384,"height":281,"dragging":false},{"id":"LLMChain-aRCVV","type":"genericNode","position":{"x":690,"y":229.296875},"data":{"type":"LLMChain","node":{"template":{"llm":{"type":"BaseLanguageModel","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","title_case":true},"memory":{"type":"BaseMemory","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"","title_case":true},"prompt":{"type":"BasePromptTemplate","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"prompt","display_name":"Prompt","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Chain to run queries against LLMs","base_classes":["Chain","Callable","Chain","LLMChain"],"display_name":"LLMChain","documentation":"","custom_fields":{"prompt":null,"llm":null,"memory":null},"output_types":["Chain","Callable","LLMChain"],"field_formatters":{},"beta":true},"id":"LLMChain-aRCVV"},"selected":false,"width":384,"height":425}],"edges":[{"source":"PromptTemplate-poH2r","sourceHandle":"{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-poH2rœ}","target":"LLMChain-aRCVV","targetHandle":"{œfieldNameœ:œpromptœ,œidœ:œLLMChain-aRCVVœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}","data":{"targetHandle":{"fieldName":"prompt","id":"LLMChain-aRCVV","inputTypes":null,"type":"BasePromptTemplate"},"sourceHandle":{"baseClasses":["BasePromptTemplate","StringPromptTemplate","PromptTemplate"],"dataType":"PromptTemplate","id":"PromptTemplate-poH2r"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-PromptTemplate-poH2r{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-poH2rœ}-LLMChain-aRCVV{œfieldNameœ:œpromptœ,œidœ:œLLMChain-aRCVVœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"},{"source":"Data-WYWqa","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-WYWqaœ}","target":"LLMChain-aRCVV","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œLLMChain-aRCVVœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"LLMChain-aRCVV","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseLLM"],"dataType":"Data","id":"Data-WYWqa"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-Data-WYWqa{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-WYWqaœ}-LLMChain-aRCVV{œfieldNameœ:œllmœ,œidœ:œLLMChain-aRCVVœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"}],"viewport":{"x":0,"y":0,"zoom":1}},"description":"Promptly Ingenious!","name":"example2","last_tested_version":"0.6.7","is_component":false}