{"id":"953db39d-2b3a-482a-9183-31ffcf599bc1","data":{"nodes":[{"id":"Data-WYWqa","type":"genericNode","position":{"x":36,"y":152.296875},"data":{"type":"Data","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional\nfrom langflow import CustomComponent\nfrom langchain.llms.bedrock import Bedrock\nfrom langchain.llms.base import BaseLLM\n\n\nclass AmazonBedrockComponent(CustomComponent):\n    display_name: str = \"Amazon Bedrock\"\n    description: str = \"LLM model from Amazon Bedrock.\"\n\n    def build_config(self):\n        return {\n            \"model_id\": {\n                \"display_name\": \"Model Id\",\n                \"options\": [\n                    \"ai21.j2-grande-instruct\",\n                    \"ai21.j2-jumbo-instruct\",\n                    \"ai21.j2-mid\",\n                    \"ai21.j2-mid-v1\",\n                    \"ai21.j2-ultra\",\n                    \"ai21.j2-ultra-v1\",\n                    \"anthropic.claude-instant-v1\",\n                    \"anthropic.claude-v1\",\n                    \"anthropic.claude-v2:1\",\n                    \"cohere.command-text-v14\",\n                ],\n            },\n            \"credentials_profile_name\": {\"display_name\": \"Credentials Profile Name\"},\n            \"streaming\": {\"display_name\": \"Streaming\", \"field_type\": \"bool\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        model_id: str = \"anthropic.claude-instant-v1\",\n        credentials_profile_name: Optional[str] = \"default\",\n    ) -> BaseLLM:\n        try:\n            output = Bedrock(\n                credentials_profile_name=credentials_profile_name,\n                model_id=model_id,\n            )  # type: ignore\n        except Exception as e:\n            raise ValueError(\"Could not connect to AmazonBedrock API.\") from e\n        return output","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"credentials_profile_name":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"default","fileTypes":[],"file_path":"","password":false,"name":"credentials_profile_name","display_name":"Credentials Profile Name","advanced":false,"dynamic":false,"info":"","title_case":true},"model_id":{"type":"str","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"value":"anthropic.claude-instant-v1","fileTypes":[],"file_path":"","password":false,"options":["ai21.j2-grande-instruct","ai21.j2-jumbo-instruct","ai21.j2-mid","ai21.j2-mid-v1","ai21.j2-ultra","ai21.j2-ultra-v1","anthropic.claude-instant-v1","anthropic.claude-v1","anthropic.claude-v2:1","cohere.command-text-v14"],"name":"model_id","display_name":"Model Id","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"CustomComponent"},"description":"LLM model from Amazon Bedrock.","base_classes":["BaseLanguageModel","BaseLLM"],"display_name":"Amazon Bedrock","documentation":"","custom_fields":{"model_id":null,"credentials_profile_name":null},"output_types":["BaseLLM"],"field_formatters":{},"beta":true},"id":"Data-WYWqa","description":"LLM model from Amazon Bedrock.","display_name":"Amazon Bedrock"},"selected":true,"width":384,"height":465,"dragging":false},{"id":"ConversationChain-0wyYv","type":"genericNode","position":{"x":453,"y":461.296875},"data":{"type":"ConversationChain","node":{"template":{"llm":{"type":"BaseLanguageModel","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","title_case":true},"memory":{"type":"BaseMemory","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"Memory to load context from. If none is provided, a ConversationBufferMemory will be used.","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langchain.chains import ConversationChain\nfrom typing import Optional, Union, Callable\nfrom langflow.field_typing import BaseLanguageModel, BaseMemory, Chain\n\n\nclass ConversationChainComponent(CustomComponent):\n    display_name = \"ConversationChain\"\n    description = \"Chain to have a conversation and load context from memory.\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\n                \"display_name\": \"Memory\",\n                \"info\": \"Memory to load context from. If none is provided, a ConversationBufferMemory will be used.\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        if memory is None:\n            return ConversationChain(llm=llm)\n        return ConversationChain(llm=llm, memory=memory)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Chain to have a conversation and load context from memory.","base_classes":["Chain","Callable"],"display_name":"ConversationChain","documentation":"","custom_fields":{"llm":null,"memory":null},"output_types":["Chain","Callable"],"field_formatters":{},"beta":true},"id":"ConversationChain-0wyYv"},"selected":false,"width":384,"height":397}],"edges":[{"source":"Data-WYWqa","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-WYWqaœ}","target":"ConversationChain-0wyYv","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œConversationChain-0wyYvœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"ConversationChain-0wyYv","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseLLM"],"dataType":"Data","id":"Data-WYWqa"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-Data-WYWqa{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-WYWqaœ}-ConversationChain-0wyYv{œfieldNameœ:œllmœ,œidœ:œConversationChain-0wyYvœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"}],"viewport":{"x":0,"y":0,"zoom":1}},"description":"Promptly Ingenious!","name":"simple-bedrock","last_tested_version":"0.6.7","is_component":false}